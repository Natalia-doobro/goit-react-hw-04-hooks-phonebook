{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","App.module.css","hook/HookLocalStorage.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","HookLocalStorage","key","defaultVel","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","ContactForm","onSubmit","masContact","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","evt","preventDefault","find","el","alert","className","s","form","htmlFor","label","type","id","input","pattern","title","required","onChange","button","ContactList","contact","onDelite","list","map","item","text","onClick","Filter","filterInputId","Section","children","container","App","contacts","setContacts","filter","setFilter","filterContacts","normalizerForm","toLowerCase","includes","filterName","data","prevState","idCont","cont","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,mBCAjED,EAAOC,QAAU,CAAC,IAAM,mB,wHCaTC,MAZf,SAA0BC,EAAKC,GAC7B,MAA0BC,oBAAS,WAAO,IAAD,EACvC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,WAA9C,QAAuDC,KADzD,mBAAOO,EAAP,KAAcC,EAAd,KAQA,OAJAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQX,EAAKG,KAAKS,UAAUJ,MAC/C,CAACR,EAAKQ,IAEF,CAACA,EAAOC,I,uCC8EFI,MArFf,YAAgD,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC/B,EAAwBb,mBAAS,IAAjC,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAA4Bf,mBAAS,IAArC,mBAAOgB,EAAP,KAAeC,EAAf,KAEMC,EAAcC,IAAQC,WACtBC,EAAgBF,IAAQC,WAExBE,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,SACHR,EAAUQ,GACV,MAEF,QACE,SA2BN,OACE,uBAAMb,SAxBa,SAACc,IACpBA,EAAIC,iBAEed,EAAWe,MAAK,SAACC,GAAD,OAAQA,EAAGf,OAASA,MAGrDgB,MAAM,GAAD,OAAIhB,EAAJ,4BAMLF,EAJY,CACVE,KAAMA,EACNE,OAAQA,IASZD,EAAQ,IACRE,EAAU,KAIoBc,UAAWC,IAAEC,KAA3C,UACE,wBAAOC,QAAShB,EAAaa,UAAWC,IAAEG,MAA1C,iBAEE,uBACEC,KAAK,OACLtB,KAAK,OACLW,MAAOX,EACPuB,GAAInB,EACJa,UAAWC,IAAEM,MACbC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUpB,OAId,wBAAOY,QAASb,EAAeU,UAAWC,IAAEG,MAA5C,mBAEE,uBACEC,KAAK,MACLtB,KAAK,SACLW,MAAOT,EACPqB,GAAIhB,EACJU,UAAWC,IAAEM,MACbC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUpB,OAId,wBAAQc,KAAK,SAASL,UAAWC,IAAEW,OAAnC,6B,gBCjDSC,EA/BK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC9B,OACE,oBAAIf,UAAWC,IAAEe,KAAjB,SACGF,EAAQG,KAAI,gBAAGX,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACX,qBAAae,UAAWC,IAAEiB,KAA1B,UACE,mBAAGlB,UAAWC,IAAEkB,KAAhB,SAAuBpC,IACvB,mBAAGiB,UAAWC,IAAEhB,OAAhB,SAAyBA,IACzB,wBACEoB,KAAK,SACLL,UAAWC,IAAEW,OACbQ,QAAS,kBAAML,EAAST,IAH1B,0DAHOA,S,iBCiBFe,EApBA,SAAC,GAAyB,IAAvB3B,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SACjBW,EAAgBlC,IAAQC,WAC9B,OACE,wBAAOc,QAASmB,EAAetB,UAAWC,IAAEG,MAA5C,oCAEE,uBACEC,KAAK,OACLC,GAAIgB,EACJtB,UAAWC,IAAEM,MACbb,MAAOA,EACPiB,SAAUA,Q,iBCCHY,EAZC,SAAC,GAAyB,IAAvBd,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,SACxB,OACE,0BAASxB,UAAWC,IAAEwB,UAAtB,UACE,oBAAIzB,UAAWC,IAAEQ,MAAjB,SAAyBA,IACxBe,M,iBC6DQE,MArDf,WACE,MAAgC5D,EAAiB,WAAY,IAA7D,mBAAO6D,EAAP,KAAiBC,EAAjB,KACA,EAA4B9D,EAAiB,SAAU,IAAvD,mBAAO+D,EAAP,KAAeC,EAAf,KAEMC,EAqBN,WACE,IAAMC,EAAiBH,EAAOI,cAC9B,OAAON,EAASE,QAAO,SAAC/B,GAAD,OACrBA,EAAGf,KAAKkD,cAAcC,SAASF,MAxBZG,GAgCvB,OACE,sBAAKnC,UAAWC,IAAEyB,IAAlB,UACE,cAAC,EAAD,CAASjB,MAAM,YAAf,SACE,cAAC,EAAD,CAAa5B,SAjCA,SAACuD,GAClB,IAAQrD,EAAiBqD,EAAjBrD,KAAME,EAAWmD,EAAXnD,OAER6B,EAAU,CACdR,GAAIlB,IAAQC,WACZN,KAAMA,EACNE,OAAQA,GAGV2C,GAAY,SAACS,GAEX,MADU,CAAIvB,GAAJ,mBAAgBuB,QAuBWvD,WAAY6C,MAGjD,eAAC,EAAD,CAASlB,MAAM,WAAf,UACE,cAAC,EAAD,CAAQf,MAAOmC,EAAQlB,SAtBR,SAACnB,GACpBsC,EAAUtC,EAAEC,cAAcC,UAsBtB,cAAC,EAAD,CACEoB,QAASiB,EACThB,SAde,SAACuB,GACtBV,GAAY,SAACS,GAAD,OAAeA,EAAUR,QAAO,SAACU,GAAD,OAAUA,EAAKjC,KAAOgC,kBC3CtEE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BhF,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,kBCAlID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.d1543930.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__dg6Ho\",\"input\":\"Filter_input__1q9jm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2Kh34\",\"title\":\"Section_title__14UIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3k1-c\"};","import { useState, useEffect } from \"react\";\n\nfunction HookLocalStorage(key, defaultVel) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultVel;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default HookLocalStorage;\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSubmit, masContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const accessName = masContact.find((el) => el.name === name);\n\n    if (accessName) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const obg = {\n        name: name,\n        number: number,\n      };\n      onSubmit(obg);\n    }\n\n    reset();\n  };\n\n  function reset() {\n    setName(\"\");\n    setNumber(\"\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor={nameInputId} className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id={nameInputId}\n          className={s.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n\n      <label htmlFor={numberInputId} className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          id={numberInputId}\n          className={s.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n\n      <button type=\"submit\" className={s.button}>\n        Add Contact\n      </button>\n    </form>\n  );\n}\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contact, onDelite }) => {\n  return (\n    <ul className={s.list}>\n      {contact.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <p className={s.text}>{name}</p>\n          <p className={s.number}>{number}</p>\n          <button\n            type=\"button\"\n            className={s.button}\n            onClick={() => onDelite(id)}\n          >\n            Удалить\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDelite: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  const filterInputId = shortid.generate();\n  return (\n    <label htmlFor={filterInputId} className={s.label}>\n      Filter contacts by name\n      <input\n        type=\"text\"\n        id={filterInputId}\n        className={s.input}\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import HookLocalStorage from \"./hook/HookLocalStorage\";\nimport shortid from \"shortid\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Section from \"./components/Section\";\n\nimport s from \"./App.module.css\";\n\n// { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n// { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n// { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n// { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n\nfunction App() {\n  const [contacts, setContacts] = HookLocalStorage(\"contacts\", []);\n  const [filter, setFilter] = HookLocalStorage(\"filter\", \"\");\n\n  const filterContacts = filterName();\n\n  const addContact = (data) => {\n    const { name, number } = data;\n\n    const contact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    setContacts((prevState) => {\n      const elem = [contact, ...prevState];\n      return elem;\n    });\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  function filterName() {\n    const normalizerForm = filter.toLowerCase();\n    return contacts.filter((el) =>\n      el.name.toLowerCase().includes(normalizerForm)\n    );\n  }\n\n  const deliteContacts = (idCont) => {\n    setContacts((prevState) => prevState.filter((cont) => cont.id !== idCont));\n  };\n\n  return (\n    <div className={s.App}>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={addContact} masContact={contacts}></ContactForm>\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={changeFilter}></Filter>\n        <ContactList\n          contact={filterContacts}\n          onDelite={deliteContacts}\n        ></ContactList>\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3UMmY\",\"label\":\"ContactForm_label__XvVCK\",\"input\":\"ContactForm_input__2LnKD\",\"button\":\"ContactForm_button__2P0HW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__HdlLP\",\"item\":\"ContactList_item__2q9MK\",\"text\":\"ContactList_text__1XsXr\",\"button\":\"ContactList_button__30rWo\"};"],"sourceRoot":""}